# Task ID: 29
# Title: Implement 'Append + Auto-Expand' Menu Option
# Status: done
# Dependencies: None
# Priority: high
# PRD Source: append-expand-prd-option.txt
# PRD Path: C:/laragon/www/taskmaster-ai/scripts/append-expand-prd-option.txt
# Parsed Date: 2025-06-01T06:23:00.242Z
# File Hash: f50675882b47c882d45a8aed13eb8d07574c30a5675bc461e89c9cca50e96442
# File Size: 11286 bytes
# Description: Add a new menu option "➕ Append new tasks + Auto-expand complex tasks" to the existing PRD parsing menu in Commander.js and Inquirer.js. This option should appear when existing tasks are detected during PRD parsing and be clearly distinguishable from the existing "Append new tasks" option. Ensure backward compatibility with existing menu options.
# Details:
Extend the `parse-prd` command in Commander.js to include a new option. Use Inquirer.js to present this option to the user. The new option's label should be '➕ Append new tasks + Auto-expand complex tasks'. This option should only be visible if existing tasks are detected, indicating a scenario where appending is relevant. Ensure the existing 'Append new tasks' option remains available and functional. The implementation should maintain the current menu structure and navigation using arrow keys and enter.

# Test Strategy:
Unit tests for the Commander.js command and Inquirer.js prompt to ensure the new option is displayed correctly under the specified conditions and is selectable. Manual testing to verify the option's appearance and selection in the CLI, and to confirm existing options remain functional.

# Subtasks:
## 1. Identify and Refactor Menu Option Generation Logic [done]
### Dependencies: None
### Description: Locate the existing code responsible for generating the PRD parsing menu options in Commander.js and Inquirer.js. Refactor this logic to allow for conditional display of menu items based on whether existing tasks are detected.
### Details:
Examine `commands/parse-prd.js` and related Inquirer.js prompt definitions. Identify the array or function that constructs the choices for the 'What do you want to do?' prompt. Create a helper function or modify the existing logic to accept a flag indicating the presence of existing tasks.

## 2. Implement Detection of Existing Tasks [done]
### Dependencies: 29.1
### Description: Add logic to the `parse-prd` command to determine if existing tasks are present in the target project/file before presenting the menu options. This detection will drive the conditional display of the new menu item.
### Details:
Before the Inquirer.js prompt is displayed, implement a check (e.g., by reading the project's task list or a specific file) to ascertain if tasks already exist. Store this state in a boolean variable that can be passed to the menu generation logic identified in subtask 1.

## 3. Add 'Append + Auto-Expand' Menu Option [done]
### Dependencies: 29.1, 29.2
### Description: Integrate the new menu option '➕ Append new tasks + Auto-expand complex tasks' into the Inquirer.js prompt choices. This option should only be visible when existing tasks are detected.
### Details:
Modify the menu option generation logic (refactored in subtask 1) to conditionally include the new choice. The choice object should have a `name` property set to '➕ Append new tasks + Auto-expand complex tasks' and a distinct `value` (e.g., 'appendAndAutoExpand'). Ensure its `when` property in Inquirer.js is linked to the boolean flag from subtask 2.

## 4. Implement Logic for 'Append + Auto-Expand' Option [done]
### Dependencies: 29.3
### Description: Develop the backend logic that executes when the '➕ Append new tasks + Auto-expand complex tasks' option is selected. This logic should append new tasks and then automatically expand any complex tasks.
### Details:
In the `parse-prd` command's action handler, add a new `case` or `if` condition for the 'appendAndAutoExpand' value. This logic should first call the existing 'append new tasks' functionality. Subsequently, it needs to identify newly appended complex tasks and trigger their auto-expansion (this might involve calling an existing 'expand' utility or implementing new logic).

## 5. Refine User Experience and Documentation [done]
### Dependencies: 29.4
### Description: Ensure the new menu option is clearly distinguishable, and update any relevant documentation or help text for the `parse-prd` command.
### Details:
Review the menu display for clarity. The '➕' prefix helps distinguish it, but consider if any additional spacing or formatting is needed. Update the `README.md` or any internal developer documentation that describes the `parse-prd` command and its options. Add a brief explanation of what 'auto-expand complex tasks' means.

